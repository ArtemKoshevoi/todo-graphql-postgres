# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""AuthMutation"""
type AuthMutation {
  """Login and get user and token"""
  login(input: UserLoginInput!): LoginResponse!

  """User sign up and get user and token"""
  signUp(input: UserSignUpInput!): SignUpResponse!
}

input CreateProfileInput {
  userName: String!
}

input CreateTaskInput {
  title: String!
}

type LoginResponse {
  access_token: String!
  user: User!
}

type Mutation {
  auth: AuthMutation!
  tasks: TasksMutation!
}

type Profile {
  id: String!
  userId: Int!
  username: String!
}

type Query {
  tasks: TasksQuery!
  user: UserQuery!
}

type SignUpResponse {
  access_token: String!
  user: User!
}

type Task {
  id: Int!
  status: TaskStatus!
  title: String!
}

"""Task Status"""
enum TaskStatus {
  Completed
  Todo
}

"""TasksMutation"""
type TasksMutation {
  """Create new task"""
  createTask(input: CreateTaskInput!): Task!

  """Remove task"""
  removeTask(id: Int!): Task

  """Update task"""
  updateTask(input: UpdateTaskInput!): Task!
}

type TasksQuery {
  findAll: [Task!]!
  findOne(id: Int!): Task!
}

input UpdateTaskInput {
  id: Int!
  status: TaskStatus!
  title: String!
}

type User {
  id: String!
  profile: Profile!
  roles: [UserRole!]!
  token: String
}

input UserLoginInput {
  password: String!
  username: String!
}

type UserQuery {
  findAll: [User!]!
  findOne(username: String!): String!
}

"""User role"""
enum UserRole {
  Admin
  User
}

input UserSignUpInput {
  password: String!
  profile: CreateProfileInput!
  roles: [UserRole!]!
}